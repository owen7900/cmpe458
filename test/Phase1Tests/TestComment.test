#! /bin/bash

echo "---------Testing Comments-----------"

echo "   A single comment only emits only a newline and eof: "

ssltrace "./ptc -t1 -o1 simple_comment.pt" ../../parser/scan.def -e > simple_comments.eOutput 2> /dev/null

if [ $(grep -c '\.pNewLine' simple_comments.eOutput) -eq 1 -a \
	$(grep -c '\.pEndFile' simple_comments.eOutput) -eq 1 -a \
       	$(grep -Evc '\.pNewLine|\.pEndFile' simple_comments.eOutput) -eq 0 ]; then
    echo "      SUCCESS"
else
    echo "      FAILED"
fi

echo "   A Comment with illegal chars emits only a newline and eof: "

ssltrace "./ptc -t1 -o1 illegal_char_comment.pt" ../../parser/scan.def -e > illegal_char_comments.eOutput 2> /dev/null

if [ $(grep -c '\.pNewLine' illegal_char_comments.eOutput) -eq 1 -a \
	$(grep -c '\.pEndFile' illegal_char_comments.eOutput) -eq 1 -a \
       	$(grep -Evc '\.pNewLine|\.pEndFile' illegal_char_comments.eOutput) -eq 0 ]; then
    echo "      SUCCESS"
else
    echo "      FAILED"
fi

echo "   Identifiers between comments are still emitted with correct buffer text: "

ssltrace "./ptc -t1 -o1 comments_with_identifiers.pt" ../../parser/scan.def -e > comments_with_identifiers.eOutput 2> /dev/null


if [ $(grep -c '\.pIdentifier' comments_with_identifiers.eOutput) -eq 1 -a \
       	$(grep -c 'identifier' comments_with_identifiers.eOutput) -eq 1 ]; then
    echo "      SUCCESS"
else
    echo "      FAILED"
fi


echo "   Identifiers before comments are still scanned: "

ssltrace "./ptc -t1 -o1 one_line_comment_identifier.pt" ../../parser/scan.def -e > one_line_comment_identifier.eOutput 2> /dev/null


if [ $(grep -c '\.pIdentifier' one_line_comment_identifier.eOutput) -eq 1 -a \
       	$(grep -c 'identifier' one_line_comment_identifier.eOutput) -eq 1 -a \
	$(grep -c 'COMMENT' one_line_comment_identifier.eOutput) -eq 0 ]; then
    echo "      SUCCESS"
else
    echo "      FAILED"
fi
